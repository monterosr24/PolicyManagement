@model PolicyManagement.Models.ModelView.PolicyViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>PolicyViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartPolicy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.StartPolicy, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker" })
                @Html.ValidationMessageFor(model => model.StartPolicy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Period, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Period, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Period, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdTypeCovering, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="IdTypeCovering" name="IdTypeCovering" class="form-control">
                    <option value="1" @(Model.IdTypeCovering == 1 ? "selected" : null)>Terremoto</option>
                    <option value="2" @(Model.IdTypeCovering == 2 ? "selected" : null)>Incendio</option>
                    <option value="3" @(Model.IdTypeCovering == 3 ? "selected" : null)>Robo</option>
                    <option value="4" @(Model.IdTypeCovering == 4 ? "selected" : null)>Pérdida</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdTypeRisk, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="IdTypeRisk" name="IdTypeRisk" class="form-control">
                    <option value="1" @(Model.IdTypeRisk == 1 ? "selected" : null)>Bajo</option>
                    <option value="2" @(Model.IdTypeRisk == 2 ? "selected" : null)>Medio</option>
                    <option value="3" @(Model.IdTypeRisk == 3 ? "selected" : null)>Medio Alto</option>
                    <option value="4" @(Model.IdTypeRisk == 4 ? "selected" : null)>Alto</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="btnUpdate" type="button" value="Update" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts
{
    <script type="text/javascript">
        $(function () {
            $('#StartPolicy').datepicker();
            $("#btnUpdate").click(function () {
                var data = {};
                data.Id = $("#Id").val();
                data.Name = $("#Name").val();
                data.Description = $("#Description").val();
                data.StartPolicy = $("#StartPolicy").val();
                data.Period = $("#Period").val();
                data.Price = $("#Price").val();
                data.IdTypeCovering = $("#IdTypeCovering").val();
                data.IdTypeRisk = $("#IdTypeRisk").val();
                $.ajax({
                    type: "PUT",
                    url: `/api/policy/${data.Id}`,
                    data: JSON.stringify(data),
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function () {
                        alert("Se actualizo correctamente la póliza");
                        window.location.href = "/Policy/Index";
                    },
                    error: function (e) {
                        alert(e.responseJSON.ExceptionMessage);
                    }
                });
                return false;
            });
        });
    </script>
}